---
name: _build
on:
  workflow_call:
    inputs:
      build_matrix:
        required: true
        type: string
        description: Build matrix for the build job

      build_command:
        required: false
        type: string
        default: "bitbake core-image-base"
        description: Command to run for the build

      build_type:
        required: false
        type: string
        default: "flat_build"
        description: Type of build to perform (flat_build or sdk_build)

jobs:
  build:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        build_matrix: ${{ fromJson(inputs.build_matrix) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build docker Image
        id: get-docker-image
        uses: ./.github/actions/build_docker_image

      - name: Clone meta-qcom repository
        run: |
          # Clone the meta-qcom repository
          cd ${{ github.workspace }}/..
          # Check if the directory already exists
          if [ -d "meta-qcom" ]; then
            echo "Directory meta-qcom already exists. Pulling latest changes."
            cd meta-qcom
            git reset --hard origin/master
            git pull origin master
          else
            echo "Directory meta-qcom does not exist. Cloning repository."
            git clone https://github.com/qualcomm-linux/meta-qcom.git
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up local git config
        run: |
          # set git config for this project only not global
          git config --local user.name "GitHub Actions"
          git config --local user.email "github-actions@github.com"

      - name: Build for ${{ matrix.build_matrix.machine }}
        uses: ./.github/actions/build
        with:
          docker_image: ${{ steps.get-docker-image.outputs.image_name }}
          kas_file: ${{ matrix.build_matrix.kas_file }}
          build_command: ${{ inputs.build_command }}
          build_type: ${{ inputs.build_type }}
        env:
          MACHINE: ${{ matrix.build_matrix.machine }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}

      # - name: Cleanup Workspace
      #   run: |
      #     # Cleanup the workspace
      #     rm -rf ${{ github.workspace }}/../build
      #     echo "Workspace cleaned up."
