name: Qualcomm Preflight Checks

on:
  pull_request_target:
    branches: [ Yocto_new_test ]
  push:
    branches: [ Yocto_new_test ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  qcom-preflight-checks:
    uses: Audioreach/audioreach-workflows/.github/workflows/qcom-preflight-checks.yml@master
    secrets: inherit

  yocto-layer-check:
    name: Yocto Layer Sanity Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Layer Repo
        uses: actions/checkout@v4
        with:
          # For PRs, use contributor's fork; fallback to main repo for push/manual
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          # For PRs, checkout PR head commit; otherwise use triggering commit SHA
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          # Do not persist GitHub token (security best practice for PR workflows)
          persist-credentials: false
          # Fetch full history (Yocto tools may read tags/version info)
          fetch-depth: 0

      - name: Install Yocto Dependencies
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y \
            gawk wget git diffstat unzip texinfo gcc build-essential \
            chrpath socat cpio python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping \
            python3-git python3-jinja2 libegl-mesa0 libsdl1.2-dev pylint

      - name: Clone Poky and meta-openembedded
        run: |
          set -euxo pipefail
          # Clone Yocto Project reference distribution (Poky) and meta-openembedded layers
          git clone https://git.yoctoproject.org/poky -b master
          git clone https://git.openembedded.org/meta-openembedded
          ls -la

      - name: Source Environment and Run Layer Check
        run: |
          set -euxo pipefail
          cd poky

          # --- Avoid 'BBSERVER: unbound variable' under nounset when sourcing env ---
          set +u
          source oe-init-build-env build   # sets PATH, BUILDDIR; cds to poky/build
          set -u
          echo "After sourcing, CWD=$(pwd)"

          # Detect layer directory (repo root or meta-ar subdir)
          LAYER_DIR="${GITHUB_WORKSPACE}"
          if [ ! -f "${LAYER_DIR}/conf/layer.conf" ]; then
            if [ -f "${LAYER_DIR}/meta-ar/conf/layer.conf" ]; then
              LAYER_DIR="${LAYER_DIR}/meta-ar"
            else
              echo "Could not find conf/layer.conf under ${GITHUB_WORKSPACE}"
              find "${GITHUB_WORKSPACE}" -maxdepth 3 -name layer.conf -printf ' - %h\n' || true
              exit 1
            fi
          fi
          echo "Using LAYER_DIR=${LAYER_DIR}"

          OE_ROOT="$(realpath ../../meta-openembedded)"

          # Run official Yocto layer checks directly (avoid wrapper edge cases)
          ../scripts/yocto-check-layer \
            -o "${PWD}/checklayer.log" \
            --dependency "${OE_ROOT}/meta-oe" \
            --dependency "${OE_ROOT}/meta-python" \
            --dependency "${OE_ROOT}/meta-multimedia" \
            --dependency "${OE_ROOT}/meta-networking" \
            "${LAYER_DIR}"

      - name: Upload check log
        uses: actions/upload-artifact@v4
        with:
          name: yocto-check-layer-log
          path: poky/build/checklayer.log
