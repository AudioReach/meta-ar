name: Qualcomm Preflight Checks

on:
  pull_request_target:
    branches: [ Yocto_new_test ]
  push:
    branches: [ Yocto_new_test ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  qcom-preflight-checks:
    uses: Audioreach/audioreach-workflows/.github/workflows/qcom-preflight-checks.yml@master
    secrets: inherit

  yocto-layer-check:
    name: Yocto Layer Sanity Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Layer Repo
        uses: actions/checkout@v4
        with:
          # For PRs, use the contributor's fork; for push/manual, fallback to main repo
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          # For PRs, checkout the PR head commit; otherwise use the triggering commit SHA
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          # Do not persist GitHub token in local config (security best practice for PRs)
          persist-credentials: false
          # Fetch full history (depth=0) so Yocto tools can access tags and version info
          fetch-depth: 0

      - name: Install Yocto Dependencies
        run: |
          set -euxo pipefail
          echo "where am i?: $(pwd)"
          sudo apt-get update
          sudo apt-get install -y \
            gawk wget git diffstat unzip texinfo gcc build-essential \
            chrpath socat cpio python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping \
            python3-git python3-jinja2 libegl-mesa0 libsdl1.2-dev pylint
        # Note: libegl-mesa0 is correct for Ubuntu 22.04/24.04 runners.

      - name: Clone Poky and meta-openembedded
        run: |
          set -euxo pipefail
          git clone https://git.yoctoproject.org/poky -b master
          git clone https://git.openembedded.org/meta-openembedded
          ls -la

      - name: Source Environment and Run Layer Check
        run: |
          set -euxo pipefail
          cd poky
          # Source env to set BUILDDIR and PATH to bitbake tools
          set +u
          source oe-init-build-env build
          set -u
          #source oe-init-build-env build
          echo "After sourcing, CWD=$(pwd)"

          # Detect layer directory
          LAYER_DIR="${GITHUB_WORKSPACE}"
          if [ ! -f "${LAYER_DIR}/conf/layer.conf" ]; then
            if [ -f "${LAYER_DIR}/meta-ar/conf/layer.conf" ]; then
              LAYER_DIR="${LAYER_DIR}/meta-ar"
            else
              echo "Could not find conf/layer.conf under ${GITHUB_WORKSPACE}"
              find "${GITHUB_WORKSPACE}" -maxdepth 3 -name layer.conf -printf ' - %h\n' || true
              exit 1
            fi
          fi
          echo "Using LAYER_DIR=${LAYER_DIR}"

          OE_ROOT="$(realpath ../../meta-openembedded)"

          # Run Yocto layer checker
          # yocto-check-layer-wrapper runs official QA checks in a clean temp build dir
          ../scripts/yocto-check-layer-wrapper -o "${PWD}/checklayer.log" \
            --dependency "${OE_ROOT}/meta-oe" \
            --dependency "${OE_ROOT}/meta-python" \
            --dependency "${OE_ROOT}/meta-multimedia" \
            --dependency "${OE_ROOT}/meta-networking" \
            "${LAYER_DIR}"

      - name: Upload check log
        uses: actions/upload-artifact@v4
        with:
          name: yocto-check-layer-log
          path: poky/build/checklayer.log
